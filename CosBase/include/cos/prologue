#
#  C Object System
#  COS Makefile -- prologue
# 
#  Copyright 2007+ Laurent Deniau <laurent.deniau@gmail.com>
# 
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
# 
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#

#
# NOTE-USER: make requirements
#
# COS makefiles requires GNU make version 3.80 or higher
#

#
# NOTE-USER: config variables from make invocation
#
# INSTALL = where to install the project  (optional, default is config specific)
# OSNAME  = operating system name         (optional, default is 'uname -s')
# OSVERS  = operating system version      (optional, default is 'uname -r')
# OSARCH  = operating system architecture (optional, default is 'uname -m')
# ARGS    = program.run extra arguments
# SHOW    = yes -> show commands
#

#
# some useful constant
#
comma  := ,
empty  :=
space  := $(empty) $(empty)

#
# some useful functions
#
eq      = $(if $(patsubst $1,,$2),,t)
neq     = $(if $(patsubst $1,,$2),t,)
first   = $(word 1,$1)
last    = $(word $(words $1),$1)
rest    = $(wordlist 2,$(words $1),$1)
chop    = $(wordlist 2,$(words $1),_ $1)
assert  = $(if $1,,$(error $2))
exists  = $(if $(wildcard $1),,$(error $2))
mkdir   = $(if $(wildcard $1),,$(shell mkdir -p $1))
reverse = $(strip $(if $1,$(call reverse,$(call rest,$1)) $(call first,$1)))

ifeq ($(origin abspath),undefined)
mkpath  = $(strip /$(patsubst /%,%,$(patsubst %/,%,$(subst / ,/, \
            $(call rmdots_, \
              $(subst /,/ ,$(call rplpat_,/./,/,$(call rplpat_,//,/, \
                $(call mkpath_,$1)/))))))))
mkpath_ = $(if $(call ispath_,$1),$(CURDIR)/)$1
ispath_ = $(call eq,$(patsubst /%,%,$1),$1)
rplpat_ = $(strip $(if $(call eq,$(subst $1,$2,$3),$3),$3, \
            $(call rplpat_,$1,$2,$(subst $1,$2,$3))))
rmdots_ = $(strip $(if $1, \
            $(if $(call eq,../,$(call first,$1)), \
              $(call rmdots_,$(call rest,$1),$(call chop,$2)), \
              $(call rmdots_,$(call rest,$1),$2 $(call first,$1))),$2))
else
mkpath  = $(abspath $1)
endif

#
# NOTE-INFO: important variables set
#
# COSDIR = where to get COS files (autodetected)
# OSNAME = operating system name  (autodetected)
#

# detect cos path (e.g path-to-this-file)
COSDIR := $(patsubst %/prologue,%,$(call last,$(MAKEFILE_LIST)))

# detect operating system name and version (e.g. Linux 2.6, Darwin 9.8)
OSNAME := $(shell uname -s)
OSVERS := $(shell uname -r)
OSARCH := $(shell uname -m)
ifeq ($(OSNAME),)
OSNAME := Default
OSVERS := 0
OSARCH := unknown
$(warning OSNAME set to Default for configuration)
endif
ifeq ($(OSTYPE),"cygwin")
OSNAME = "CYGWIN"
endif
ifdef MSYSTEM
OSNAME = $(MSYSTEM)
endif

# clear some suffixes (MAKEFLAGS += -R doesn't work)
.SUFFIXES:

# set command echo
_ := $(if $(call eq,$(SHOW),yes),,@)
E := $(if $(call eq,$(SHOW),yes),@ echo '\#',@ echo)

# debug
ifneq ($(SHOW),yes)
MAKEFLAGS += --no-print-directory
endif

# checks
$(call exists, $(COSDIR), unable to find COSDIR='$(COSDIR)')
$(call assert, $(OSNAME), unable to detect operating system)

# include operating system config
include $(COSDIR)/cfg/$(OSNAME)

# end of makefile

