#
# o---------------------------------------------------------------------o
# |
# | COS ChangeLog
# |
# o---------------------------------------------------------------------o
# |
# | C Object System
# |
# | Copyright (c) 2007+ Laurent Deniau, laurent.deniau@gmail.com
# |
# | For more information, see:
# | http://cern.ch/laurent.deniau/cos.html
# |
# o---------------------------------------------------------------------o
# |
# | This file is part of the C Object System framework.
# |
# | The C Object System is free software; you can redistribute it and/or
# | modify it under the terms of the GNU Lesser General Public License
# | as published by the Free Software Foundation; either version 3 of
# | the License, or (at your option) any later version.
# |
# | The C Object System is distributed in the hope that it will be
# | useful, but WITHOUT ANY WARRANTY; without even the implied warranty
# | of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# |
# | See <http://www.gnu.org/licenses> for more details.
# |
# o---------------------------------------------------------------------o
# |
# | $Id: CHANGELOG,v 1.6 2010/03/23 16:31:28 ldeniau Exp $
# |
#

** 0.91 [2010-] // TODO, ongoing state
  - docstring system finished and based on Sphinx (Python) for
    the html/pdf output.
  - documentation is ongoing
  - moved to GitHub
  - License moved to Apache

** 0.9 [2009-2010]
  - "Any" class resurrected. Useful to factorize some "Core" message. No
    change on the user's side, but allow to make Functor not an Object
    without duplicating all the code of Object. "Any vs Nil" looks also more
    idomatic for COS dual root classes. User's "root" classes should always
    derive from Any (classes with instances) or Nil (classes without instance).
    User "normal" classes should still derive from Object which is the default
    inheritance when no super class is provided.
  - docstring system added (data structure, keyword, marker definition),
    but the document generator is not yet implemented.
  - many minor changes
  - variadic generics implementation changed to remove a warning
  - rpath removed due to a (known) bug in the glibc when unloaded
  - CosStd extended but still very unstable (I use it mainly to explore the
    design space of COS at the moment).
  - CosExt added but empty. This module should contain all the classes and
    generics as "wrappers" for external lib (see TODO-CosStd todo list)

** 0.8 [2009]
  - makefile simplified and compliant with gmake 3.80 (and maybe earlier)
  - plug-in support (not really tested but there)
  - rpath added, replaces LD_LIBRARY_PATH settings for run targets in makefile
  - SunOS and FreeBSD makefile added (for gcc), but not tested.
  - Nil and derivates method specialization trig compile time errors
  - examples added
  - tarball + tests + install + uninstall

** 0.7 [2008-2009] - First beta release
  - all the language feature are there
  - moving from alpha to beta state
  - properties added
  - gdelete and gautoDelete added (for semi-GC)
  - more compile-time checks
  - module support
  - start of other modules (not provided)
  - tarball + tests + install

** 0.5 [2007-2008] - New design from scratch
  - sourceforge project reloaded (history lost)
  - syntax changes, more flexible, safer
  - deep macros refactoring
  - methods protocol completely changed (packed struct for monomorphic parameters)
  - aliases and contract added
  - CVS only

** 0.2 [2006-2007] - First alpha release
  - first try
  - iterate over various object model and language syntax
  - feasibility test on C expressivity (macros)
  - feasibility test on dispatcher speed (Â± C++ virtual calls efficiency)
  - use variadic function for methods (not very portable)
  - CVS only

